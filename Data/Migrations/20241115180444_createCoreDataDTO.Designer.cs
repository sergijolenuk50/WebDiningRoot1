// <auto-generated />
using System;
using Data.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Data.Migrations
{
    [DbContext(typeof(DiningRoomDbContext))]
    [Migration("20241115180444_createCoreDataDTO")]
    partial class createCoreDataDTO
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Data.Entities.Bread", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Bread");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Цільнозерновий"
                        },
                        new
                        {
                            Id = 2,
                            Name = "з висівками"
                        });
                });

            modelBuilder.Entity("Data.Entities.Drinkc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Drinkc");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Чай"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Какао"
                        });
                });

            modelBuilder.Entity("Data.Entities.FirstDishes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FirstDishes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Суп гороховий"
                        });
                });

            modelBuilder.Entity("Data.Entities.Garnish", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Garnish");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Каша кукурудзяна"
                        });
                });

            modelBuilder.Entity("Data.Entities.MeatDishes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MeatDishes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Нагіци з курки"
                        });
                });

            modelBuilder.Entity("Data.Entities.Menu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Archived")
                        .HasColumnType("bit");

                    b.Property<int>("BreadId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("DayWeek")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DrinkcId")
                        .HasColumnType("int");

                    b.Property<int>("FirstDishesId")
                        .HasColumnType("int");

                    b.Property<int>("GarnishId")
                        .HasColumnType("int");

                    b.Property<int>("MeatDishesId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SaladId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BreadId");

                    b.HasIndex("DrinkcId");

                    b.HasIndex("FirstDishesId");

                    b.HasIndex("GarnishId");

                    b.HasIndex("MeatDishesId");

                    b.HasIndex("SaladId");

                    b.ToTable("Menu");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Archived = false,
                            BreadId = 1,
                            Date = new DateTime(1985, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DayWeek = "Понеділок",
                            DrinkcId = 2,
                            FirstDishesId = 1,
                            GarnishId = 1,
                            MeatDishesId = 1,
                            Name = "1-4 Клас",
                            SaladId = 1
                        });
                });

            modelBuilder.Entity("Data.Entities.Salad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Salad");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Салат з капусти"
                        });
                });

            modelBuilder.Entity("Data.Entities.Menu", b =>
                {
                    b.HasOne("Data.Entities.Bread", "Bread")
                        .WithMany("Menus")
                        .HasForeignKey("BreadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Entities.Drinkc", "Drinkc")
                        .WithMany("Menus")
                        .HasForeignKey("DrinkcId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Entities.FirstDishes", "FirstDishes")
                        .WithMany("Menus")
                        .HasForeignKey("FirstDishesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Entities.Garnish", "Garnish")
                        .WithMany("Menus")
                        .HasForeignKey("GarnishId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Entities.MeatDishes", "MeatDishes")
                        .WithMany("Menus")
                        .HasForeignKey("MeatDishesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Entities.Salad", "Salad")
                        .WithMany("Menus")
                        .HasForeignKey("SaladId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bread");

                    b.Navigation("Drinkc");

                    b.Navigation("FirstDishes");

                    b.Navigation("Garnish");

                    b.Navigation("MeatDishes");

                    b.Navigation("Salad");
                });

            modelBuilder.Entity("Data.Entities.Bread", b =>
                {
                    b.Navigation("Menus");
                });

            modelBuilder.Entity("Data.Entities.Drinkc", b =>
                {
                    b.Navigation("Menus");
                });

            modelBuilder.Entity("Data.Entities.FirstDishes", b =>
                {
                    b.Navigation("Menus");
                });

            modelBuilder.Entity("Data.Entities.Garnish", b =>
                {
                    b.Navigation("Menus");
                });

            modelBuilder.Entity("Data.Entities.MeatDishes", b =>
                {
                    b.Navigation("Menus");
                });

            modelBuilder.Entity("Data.Entities.Salad", b =>
                {
                    b.Navigation("Menus");
                });
#pragma warning restore 612, 618
        }
    }
}
